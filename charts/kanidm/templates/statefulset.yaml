{{- /*
Copyright Broadcom, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" (dict "customLabels" .Values.commonLabels "context" $) | nindent 4 }}
    app.kubernetes.io/component: server
  {{- if or .Values.statefulsetAnnotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" (dict "values" (list .Values.statefulsetAnnotations .Values.commonAnnotations) "context" .) }}
  annotations: {{- include "common.tplvalues.render" (dict "value" $annotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  serviceName: {{ template "common.names.fullname" . }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list .Values.podLabels .Values.commonLabels) "context" .) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" (dict "customLabels" $podLabels "context" $) | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels: {{- include "common.labels.standard" (dict "customLabels" $podLabels "context" $) | nindent 8 }}
        app.kubernetes.io/component: server
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.image) "context" $) | nindent 6 }}
      serviceAccountName: {{ include "kanidm.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
      {{- if and (semverCompare "^1.33.0" .Capabilities.KubeVersion.Version) (ne .Values.hostUsers true) }}
      hostUsers: {{ .Values.hostUsers }}
      {{- end}}
      {{- with .Values.podSecurityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global "chart" .Chart) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.containerSecurityContext }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: https
              containerPort: {{ .Values.service.ports.https }}
            {{- if .Values.service.ports.ldaps.enabled  }}
            - name: ldaps
              containerPort: {{ .Values.service.ports.ldaps.port }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          env:
            - name: KANIDM_DOMAIN
              value: {{ required "An origin domain must be supplied" .Values.config.domain | quote }}
            - name: KANIDM_ORIGIN
              value: "https://{{ .Values.config.domain }}"
            - name: KANIDM_BINDADDRESS
              value: "[::]:{{ .Values.service.ports.https }}"
            {{- if .Values.service.ports.ldaps.enabled  }}
            - name: KANIDM_LDAPBINDADDRESS
              value: "[::]:{{ .Values.service.ports.ldaps.port }}"
            {{- end }}
            {{- if .Values.cert.create }}
            - name: KANIDM_TLS_CHAIN
              value: "/certs/tls.crt"
            - name: KANIDM_TLS_KEY
              value: "/certs/tls.key"
            {{- end }}
            - name: KANIDM_DB_PATH
              value: "/data/kanidm.db"
            - name: KANIDM_TRUST_X_FORWARD_FOR
              value: "true"
            {{- with .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.extraEnvFrom }}
          envFrom: {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvFrom "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /data/server.toml
              subPath: server.toml
              readOnly: true
            - name: data
              mountPath: /data
            {{- if .Values.cert.create }}
            - name: certs
              mountPath: /certs/
              readOnly: true
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "common.names.fullname" . }}
            defaultMode: 0440
        {{- if .Values.cert.create }}
        - name: certs
          secret:
            secretName: {{ include "common.names.fullname" . }}-tls
            defaultMode: 0440
        {{- end}}
        {{- with .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- if or .Values.persistence.annotations .Values.commonAnnotations }}
        {{- $claimAnnotations := include "common.tplvalues.merge" (dict "values" .Values.persistence.annotations .Values.commonAnnotations "context" .) | fromYaml }}
        annotations: {{- include "common.tplvalues.render" (dict "value" $claimAnnotations "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        labels: {{- include "common.labels.matchLabels" (dict "customLabels" .Values.commonLabels "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
        {{- end }}
        {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
